{"version":3,"sources":["components/BreakTime.js","components/SessionLength.js","components/Timer.js","components/App.js","reportWebVitals.js","index.js"],"names":["BreakTime","props","className","disabled","isPlay","onClick","breakTime","decreaseBreak","increaseBreak","SessionLength","sessionLength","decreaseSession","increaseSession","Timer","state","isSession","timerSecond","intervalId","playTimer","bind","stopTimer","restartTimer","decreaseTimer","setInterval","this","onPlayStopTimer","setState","clearInterval","timerRestart","timerMinute","toggleInterval","updateTimerMinute","prevState","React","Component","App","breakLength","onIncreaseBreakLength","onDecreaseBreakLength","onDecreaseSessionLength","onIncreaseSessionLength","onToggleInterval","onUpdateTimerMinute","onTimerRestart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebbaf059.chunk.js","sourcesContent":["import React from 'react';\n\nfunction BreakTime(props) {\n  function decreaseCounter() {\n    if (props.breakTime === 1) {\n      return;\n    }\n    props.decreaseBreak();\n  }\n\n  function increaseCounter() {\n    if (props.breakTime === 60) {\n      return;\n    }\n    props.increaseBreak();\n  }\n\n  return (\n    <section>\n      <h4>Break Length</h4>\n      <section className=\"interval-container\">\n        <button\n          disabled={props.isPlay === true ? 'disabled' : ''}\n          onClick={decreaseCounter}\n        >\n          Down\n        </button>\n        <p className=\"interval-length\">{props.breakTime}</p>\n        <button\n          disabled={props.isPlay === true ? 'disabled' : ''}\n          onClick={increaseCounter}\n        >\n          Up\n        </button>\n      </section>\n    </section>\n  );\n}\n\nexport default BreakTime;\n","import React from 'react';\n\nfunction SessionLength(props) {\n  function increaseSession() {\n    if (props.sessionLength === 60) {\n      return;\n    }\n    props.increaseSession();\n  }\n  function decreaseSession() {\n    if (props.sessionLength === 1) {\n      return;\n    }\n    props.decreaseSession();\n  }\n  return (\n    <section>\n      <h4>Session Length</h4>\n      <section className=\"interval-container\">\n        <button\n          disabled={props.isPlay === true ? 'disabled' : ''}\n          onClick={decreaseSession}\n        >\n          Down\n        </button>\n        <p className=\"interval-length\">{props.sessionLength}</p>\n        <button\n          disabled={props.isPlay === true ? 'disabled' : ''}\n          onClick={increaseSession}\n        >\n          Up\n        </button>\n      </section>\n    </section>\n  );\n}\n\nexport default SessionLength;\n","import React from 'react';\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isSession: true,\n      timerSecond: 0,\n      intervalId: 0,\n    };\n\n    this.playTimer = this.playTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.restartTimer = this.restartTimer.bind(this);\n    this.decreaseTimer = this.decreaseTimer.bind(this);\n  }\n\n  playTimer() {\n    let intervalId = setInterval(this.decreaseTimer, 1000);\n    this.props.onPlayStopTimer(true);\n\n    this.setState({\n      intervalId: intervalId,\n    });\n  }\n\n  stopTimer() {\n    clearInterval(this.state.intervalId);\n    this.props.onPlayStopTimer(false);\n  }\n\n  restartTimer() {\n    this.stopTimer();\n    this.props.timerRestart();\n    this.props.onPlayStopTimer(false);\n\n    this.setState({\n      timerSecond: 0,\n      isSession: true,\n    });\n  }\n\n  decreaseTimer() {\n    switch (this.state.timerSecond) {\n      case 0:\n        if (this.props.timerMinute === 0) {\n          if (this.state.isSession) {\n            this.setState({\n              isSession: false,\n            });\n            this.props.toggleInterval(this.state.isSession);\n          } else {\n            this.setState({\n              isSession: true,\n            });\n            this.props.toggleInterval(this.state.isSession);\n          }\n        } else {\n          this.props.updateTimerMinute();\n          this.setState({\n            timerSecond: 59,\n          });\n        }\n        break;\n      default:\n        this.setState((prevState) => {\n          return {\n            timerSecond: prevState.timerSecond - 1,\n          };\n        });\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <section>\n        <section className=\"timer-container\">\n          <h4>{this.state.isSession === true ? 'Session' : 'Break'}</h4>\n          <span className=\"timer\">{this.props.timerMinute}</span>\n          <span className=\"timer\">:</span>\n          <span className=\"timer\">\n            {this.state.timerSecond === 0\n              ? '00'\n              : this.state.timerSecond < 10\n              ? '0' + this.state.timerSecond\n              : this.state.timerSecond}\n          </span>\n        </section>\n        <section className=\"timer-actions\">\n          <button onClick={this.playTimer}>Play</button>\n          <button onClick={this.stopTimer}>Stop</button>\n          <button onClick={this.restartTimer}>Restart</button>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport '../App.css';\nimport BreakTime from './BreakTime';\nimport SessionLength from './SessionLength';\nimport Timer from './Timer';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timerMinute: 25,\n      isPlay: false,\n    };\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onUpdateTimerMinute = this.onUpdateTimerMinute.bind(this);\n    this.onTimerRestart = this.onTimerRestart.bind(this);\n    this.onPlayStopTimer = this.onPlayStopTimer.bind(this);\n  }\n\n  onIncreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength + 1,\n      };\n    });\n  }\n\n  onDecreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength - 1,\n      };\n    });\n  }\n\n  onIncreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.sessionLength + 1,\n      };\n    });\n  }\n\n  onDecreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.sessionLength - 1,\n      };\n    });\n  }\n\n  onUpdateTimerMinute() {\n    this.setState((prevState) => {\n      return {\n        timerMinute: prevState.timerMinute - 1,\n      };\n    });\n  }\n\n  onToggleInterval(isSession) {\n    if (isSession) {\n      this.setState({\n        timerMinute: this.state.sessionLength,\n      });\n    } else {\n      this.setState({\n        timerMinute: this.state.breakLength,\n      });\n    }\n  }\n\n  onTimerRestart() {\n    this.setState({\n      timerMinute: this.state.sessionLength,\n    });\n  }\n\n  onPlayStopTimer(isPlay) {\n    this.setState({\n      isPlay: isPlay,\n    });\n  }\n\n  render() {\n    return (\n      <main>\n        <h2>Pomo Time</h2>\n        <section className=\"interval-length-container\">\n          <BreakTime\n            isPlay={this.state.isPlay}\n            breakTime={this.state.breakLength}\n            increaseBreak={this.onIncreaseBreakLength}\n            decreaseBreak={this.onDecreaseBreakLength}\n          />\n          <SessionLength\n            isPlay={this.state.isPlay}\n            sessionLength={this.state.sessionLength}\n            increaseSession={this.onIncreaseSessionLength}\n            decreaseSession={this.onDecreaseSessionLength}\n          />\n        </section>\n        <Timer\n          timerMinute={this.state.timerMinute}\n          breakLength={this.state.breakLength}\n          updateTimerMinute={this.onUpdateTimerMinute}\n          toggleInterval={this.onToggleInterval}\n          timerRestart={this.onTimerRestart}\n          onPlayStopTimer={this.onPlayStopTimer}\n        />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}